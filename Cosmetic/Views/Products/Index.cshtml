@model IEnumerable<Shop.Models.Product>
@{
	ViewData["Title"] = "Product Management";
	Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}

<div class="dashboard-page-content">
	<div class="row mb-9 align-items-center justify-content-between">
		<div class="col-md-6 mb-8 mb-md-0">
			<h2 class="fs-4 mb-0">Product Management</h2>
		</div>
		<div class="col-md-6 d-flex flex-wrap justify-content-md-end">
			<a asp-controller="Products" asp-action="Create" class="btn btn-primary">
				Create new
			</a>
		</div>
	</div>
	<div class="card mb-4 rounded-4 p-7">
		<div class="card-body px-0 pt-7 pb-0">
			<div class="table-responsive">
				<table class="table table-hover align-middle table-nowrap mb-0">
					<thead class="table-light">
						<tr>
							<th class="align-middle text-center" scope="col" style="width: 3%;">
								#
							</th>
							@* <th class="align-middle" scope="col"> *@
							@* 	@Html.DisplayNameFor(model => model.ImageURL) *@
							@* </th> *@
							<th class="align-middle text-center" scope="col" style="width: 25%;">
								@Html.DisplayNameFor(model => model.Name)
							</th>
							<th class="align-middle text-center" scope="col" style="width: 25%;">
								@Html.DisplayNameFor(model => model.Description)
							</th>
							<th class="align-middle" scope="col" style="width: 5%;">
								@Html.DisplayNameFor(model => model.Price)
							</th>
							<th class="align-middle text-center" scope="col" style="width: 7%;">
								@Html.DisplayNameFor(model => model.InStock)
							</th>
							<th class="align-middle" scope="col" style="width: 5%;">
								@Html.DisplayNameFor(model => model.Status)
							</th>
							<th class="align-middle" scope="col" style="width: 10%;">
								Category
							</th>
							<th class="align-middle text-center" scope="col" style="width: 15%;">
								Actions
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var (item, index) in Model.Select((value, i) => (value, i)))
						{
							<tr>
								<td>@(index + 1)</td>
								<td>
									<div class="d-flex align-items-center flex-nowrap">
										@* <img src="#" data-src="../assets/images/products/product-03-75x100.jpg" alt="Flowers cotton dress" class="lazy-image" width="60" height="80"> *@
										<a asp-controller="Products" asp-action="Edit" asp-route-id="@item.ID"><img src="@item.Image" class="lazy-image" width="60" height="80" alt="Product Image" /></a>
										<a href="../shop/product-details-v1.html" title="Flowers cotton dress" class="ms-6">
											<a asp-controller="Products" asp-action="Edit" asp-route-id="@item.ID"><p class="fw-semibold text-body-emphasis mb-0">@Html.DisplayFor(modelItem => item.Name)</p></a>
										</a>
									</div>
								</td>
								<td>
									<div class="description" id="desc-@item.ID">
										@Html.DisplayFor(modelItem => item.Description)
									</div>
									<span class="see-more" onclick="toggleDescription(@item.ID)">See more</span>
								</td>
								<td>@Html.DisplayFor(modelItem => item.Price)</td>
								<td class="text-center">@Html.DisplayFor(modelItem => item.InStock)</td>
								@{
									var statusText = (item.Status ?? "").Trim().ToLower();
									var statusClass = statusText == "out of stock" ? "alert-danger" : "alert-success";
								}
								<td>
									<span class="badge rounded-lg rounded-pill alert py-3 px-4 mb-0 border-0 text-capitalize fs-12 @statusClass">
										@Html.DisplayFor(modelItem => item.Status)
									</span>
								</td>
								<td>@item.Category?.Name</td>
								<td class="text-center">
									<div class="d-flex flex-nowrap justify-content-center">
										<a asp-controller="Products" asp-action="Edit" asp-route-id="@item.ID" class="btn btn-primary py-4 px-5 btn-xs fs-13px me-4"><i class="far fa-pen me-2"></i> Edit</a>
										@* <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-primary btn-hover-bg-danger btn-hover-border-danger btn-hover-text-light py-4 px-5 fs-13px btn-xs me-4"><i class="far fa-trash me-2"></i> Delete</a> *@
										<a href="javascript:void(0);" class="btn btn-outline-primary btn-hover-bg-danger btn-hover-border-danger btn-hover-text-light py-4 px-5 fs-13px btn-xs me-4"
										   onclick="confirmDelete('@item.ID');">
											<i class="far fa-trash me-2"></i> Delete
										</a>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="deleteModalLabel">Delete Product</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					Are you sure you want to permanently delete this product?
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
					<form asp-action="Delete">
						<input type="hidden" id="deleteId" name="id">

						<button type="submit" id="confirmDeleteBtn" class="btn btn-danger">Yes</button>
					</form>
				</div>
			</div>
		</div>
	</div>

</div>
<script>
	var deleteId = null;

	function confirmDelete(id) {
		deleteId = id;
		var deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
		document.getElementById("deleteId").value=id;
		deleteModal.show();
	}

	document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
		if (deleteId) {
			$.post('/Products/DeleteConfirmed/' + deleteId, { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() }, function (response) {
				if (response.success) {
					$("#deleteModal").modal('hide');
					$("tr:has(td:contains('" + deleteId + "'))").remove();
				} else {
					alert("Xóa không thành công: " + response.message);
				}
			}).fail(function () {
				alert("Có lỗi xảy ra! Vui lòng thử lại.");
			});
		}
	});

	  function toggleDescription(productId) {
	  var description = document.getElementById('desc-' + productId);
	  var seeMore = document.querySelector('#desc-' + productId + ' + .see-more');

	  description.classList.toggle('full');
	  seeMore.innerHTML = description.classList.contains('full') ? 'See less' : 'See more';
	}

	document.querySelectorAll('.description').forEach(function (desc) {
	  if (desc.scrollHeight > desc.clientHeight) {
		desc.nextElementSibling.style.display = 'inline'; 
	  }
	});
</script>
